{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n\n## Loading and preprocessing the data\n#### 1. Load the data\n```{r results='hide',warning=FALSE,message=FALSE}\ndata <- read.csv(unz(\"activity.zip\", \"activity.csv\"), sep=\",\",stringsAsFactors=FALSE)\n```\n\n#### 2. Transform the data into _data.table_\n```{r results='hide',warning=FALSE,message=FALSE}\nlibrary(data.table)\ndt <- data.table(data);rm(data);gc()\n```\n```{r echo=FALSE}\ndt\n```\n\n## The mean total number of steps taken per day.\n#### 1. The histogram of the total number of steps taken each day.\n```{r}\nlibrary(ggplot2)\ndt.DailyStep <- dt[,.(DailyStep=sum(steps)),by=date]\nqplot(DailyStep, data=dt.DailyStep, geom=\"histogram\",binwidth=1000)\n```\n\n#### 2. The mean and median total number of steps taken per day.\n```{r}\ndt.DailyStep[,.(Mean=mean(DailyStep,na.rm=T),Median=median(DailyStep,na.rm=T))]\n```\n\n## The average daily activity pattern.\n#### 1. Plot of the 5-minute interval and the average number of steps taken, averaged across all days.\n```{r}\ndt.DailyActivity <- dt[,.(AverageSteps=mean(steps,na.rm=T)),by=interval]\nqplot(x=interval,y=AverageSteps,data=dt.DailyActivity,geom=\"line\") +\n  ylab(\"Average number of steps\")\n```\n\n#### 2. The 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps:  \n```{r}\ndt.DailyActivity[order(AverageSteps,decreasing = T)[1],]\n```\n\n## Imputing missing values\n#### 1. The total number of missing values in the dataset.\n```{r}\nnrow(dt[which(is.na(steps))])\n```\n\n\n#### 2. Fill in all of the missing values in the dataset using the mean for that 5-minute interval and create a new dataset correspondingly.\n\n```{r, warning=FALSE}\ndt.fill <- dt\ndt.fill[which(is.na(steps)),]$steps <- dt.DailyActivity[interval %in% dt[which(is.na(steps)),interval],AverageSteps]\ndt.fill\n```\n**Comments: Since the variable 'steps' in the raw data set is of type _Integer_, I filled also integers (by taking round of the means).**\n\n#### 3. The histogram of the total number of steps taken each day, the mean and median total number of steps taken per day. \n```{r}\ndt.fill.DailyStep <- dt[,.(DailyStep=sum(steps)),by=date]\nqplot(DailyStep, data=dt.fill.DailyStep, geom=\"histogram\",binwidth=1000) +\n  xlab(\"Number of steps taken (daily)\") +\n  ylab(\"Frequency\")\ndt.fill.DailyStep[,.(Mean=mean(DailyStep,na.rm=T),Median=median(DailyStep,na.rm=T))]\n```\n**According to the graph above, we can see that there are no obvious differences by filling the missing values.**\n\n## Activity patterns at weekdays and weekends.\n#### 1. Create a new factor variable in the dataset with two levels: 'weekday' and 'weekend' indicating whether a given date is a weekday or weekend day.\n```{r, results='hide'}\ndt[,WeekDay:=weekdays(as.Date(dt$date))]\ndt[WeekDay==\"Sunday\" | WeekDay==\"Saturday\",WD:=\"weekend\"]\ndt[!(WeekDay==\"Sunday\" | WeekDay==\"Saturday\"),WD:=\"weekday\"]\ndt[,WeekDay:=NULL]\n```\n```{r, echo=FALSE}\ndt\n```\n#### 2. The panel plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days.\n```{r}\ndt.DailyActivity.WD <- dt[,.(AverageSteps=mean(steps,na.rm=T),WD=WD),by=.(interval,WD)]\nqplot(x=interval,y=AverageSteps,data=dt.DailyActivity.WD,geom=\"line\") +\n  facet_wrap(~ WD,nrow=2) +\n  ylab(\"Average Number of Steps\") +\n  theme(strip.background=element_rect(fill=\"pink\"))\n```\n",
    "created" : 1418507030185.000,
    "dirty" : false,
    "encoding" : "CP936",
    "folds" : "",
    "hash" : "1561496391",
    "id" : "C27813DB",
    "lastKnownWriteTime" : 1418573331,
    "path" : "G:/Coursera/Data Science/Github/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}